

23.10. 2019
Mihinkäs tässä oltiin päästy? Parseri luo nyt haarautumia aika vapaasti, mutta se myös päätyy sanajärjestykseltään oikeisiin (vihreisiin) ratkaisuihin. Siinä oli joku syy miksi ei ole ahne piirteiden tarkastus joka valitsisi eteennostavan piirteiden tarkastuksen aina kun mahdollista. En muista enää mikä syy se oli, sillä ahne piirteiden tarkastus oli siitä hyvä että se kavensi mahdollisia haarautumia paljon. Pitää tarkistaa, laitetaan ahne tarkastus takaisin päälle ja katsotaan miten muuttuu.

(Ahne piirteiden tarkistus = kun attempt_raising-metodi kokeilee mahdollisia piirrepareja ja niiden sallimia nostoja, jos nosto onnistuu,
poistutaan metodista. Jos ei ole ahne, aloitetaan se haara mutta jatketaan myös piirteiden hakua etsien muita mahdollisia piirrepareja.)

No tuossa selityksessä tulikin ilmi yksi hyvä syy olla nojaamatta ahneeseen piirretarkastukseen. Jos se oletetaan, tulee tärkeäksi missä järjestyksessä piirteet ovat ja missä järjestyksessä niitä esitetään. Siitä voi tulla vaikeaa tai hallitsemattoman vaikeaa.

Nyt tutkitaan esimerkkilauseiden ensimmäistä: 'Pekka sanoi että se väite että teoria kumoutui kumoutui'. Sanastoa piti korjata, 'se' sisältää myös '-rel'-piirteen jotta olisi mahdollista sanoa myös 'Pekka sanoi että se että teoria kumoutui kumoutui'. Sillä korjauksella lause synnyttää 353 mahdollista puuta, joissa silmämääräisesti 6 onnistunnutta. Niistä pistää silmään alimmat kaksi, joissa koko lause käsitellään muuten, mutta ihan lopussa vasta nostetaan 'Pekka' 'sanoi' eteen. Ei ole mitään syytä miksi tämän suhteen tunnustamista lykättäisiin näin kauan, psykologisesti jos lause alkaa 'Pekka sanoi... ' niin se tiedetään jo siinä vaiheessa että nyt on varmasti kyse siitä että Pekka sanoi jotain. Ei tarvitse odottaa miten lause jatkuu sen päättelemiseksi. Pitäisi olla joku keino heti sulkea pois se vaihtoehto että lykätään tätä nostoa.

No, nyt meillä on jäänyt aiemmista versioista kaksi negatiivisen piirteen merkkiä, '-' ja '=', jotka nykyään tulkitaan samoin. Ennen toinen tarkoitti nostoa positiivisen piirteen omaavan lausekkeen eteen ja toinen nostoa sen perään. Siitä aiheutui vaikeuksia ja huomasin että enemmän lauseita saa toimivan tulkinnan jos erottelusta luovutaan ja negatiivinen piirre voidaan aina nostaa jommallekummalle puolelle. Tämä antaa mahdollisuuden dedikoida toinen noista merkeistä pakolliseksi nostoksi, nostoksi joka pitää tehdä heti kun mahdollista. Vaikeuksia tulee aiheuttamaan sekin, mutta kokeillaan.

Siinä lauseessa sai tulkintojen määrän putoamaan 91:een ja hyvät tulkinnat löytyy yhä. Leksikko on nyt sekaisin muiden lauseiden osalta, lähdetään korjailemaan. Yllättävän vähän löytyi korjattavaa, mutta löytyi uusi mahdoton rakenne jota syntyy ja sen poistamalla saisi tulkintoja vähenemään. Lauseessa 'lääke josta Merja halusi eroon löytyi kaapista' tulee outoja 'josta+halusi' -yhdistelmiä. Siinä on taustalla vähän ad hoc sääntö, jossa kysymyssana + N voidaan yhdistää jotta tilanteissa joissa kun on vaikka 'minkä kirjan Pekka lainasi' niin 'minkä kirjan' saa muodon minkä+kirjan jolla on sekä wh-piirre että kirjan N-piirteet. Tätä ei pitäisi käyttää 'josta+halusi'-yhdistelmään. Ja toisaalta haluaisin kyetä luomaan 'suureen+valtamereen' -yhdistelmän ilman että se käynnistäisi argumentin nostoa jostain kauempaa. Pitäisi varmaan olla eksplisiittinen adjunktin liittäminen joka hoitaisi nuo molemmat. Voisi ottaa merkin '+' sille operaatiolle. '+N' tarkoittaisi että tämä voi ottaa 'N':n adjunktiksi.

27.10. 2019

Mitä mahdollisia ongelmia adjunktisäännöstä seuraisi? Yksi on että se pakottaa (ehkä) valitsemaan mikä lopulta on pääsanalle argumentti ja mikä adjunkti. Olisi houkuttelevaa sanoa että adjunkteja ei voi wh-siirtää. Suomen kielen vapaasta sanajärjestyksestä adjunktien siirtelyä ei varsinaisesti tarvitsisi koska adjunkteja voi asetella pääsanan molemmin puolin. Tällöin tarvittaisiin syy miksi 'auto keltainen' on melko ok suomessa, mutta 'car yellow' ei ole kieliopillinen englanniksi. Miksei adjunktia voi siellä asettaa vapaasti? '*the car yellow won the race' miten rikki se on vai eikö niin vain sanota jostakin komputationaalisesta syystä, eli kun asia halutaan sanoa englanniksi, päädytään aina 'the yellow car' järjestykseen? Kun adjektiivien kanssa on noita hienovaraisempiakin keskinäisen järjestelyn taipumuksia joiden syntaktinen perustelu vaatisi kömpelön paljon piirteitä vain sitä varten. Esim. 'pieni keltainen kissa' on luontevampi kuin 'keltainen pieni kissa', ja 'vanha pieni keltainen kissa' luontevampi kuin 'keltainen pieni vanha kissa', mutta erot ovat niin hailakoita että luulen sen olevan enemmän käsitteenmuodostuksen alueella kuin syntaksissa. Eli vaikka en saa 'car yellow' -rakennetta estettyä, lohduttaudun sillä että se ei ehkä ole ongelma.

Kun tehdään 'minkä+kirjan' -tyylisiä adjunktoitumisia tavoite on saada molempien osien piirteet mukaan tulevaan laskentaan. Se vaatii molempien jäsenten piirteiden yhdistämistä yhdeksi ristiriidattomaksi joukoksi. Siitä tulee luontevasti se ehto että piirteiden täytyy lähtökohtaisesti olla ristiriidattomia, kongruentteja, ei voi olla että toinen tuo mukaan monikkopiirteen ja toinen yksikköpiirteen. Jos molemmilla on sama piirre, tulosjoukossa on se piirre kertaalleen. Jos molemmilla on samanniminen piirre, mutta eri arvolla, tulosjoukkoa ei voi olla. Jos toisella on piirre ja toisella ei, niin tulosjoukossa on se piirre. Jos molemmilla on sama piirre samalla nimellä, mutta eri merkillä, en tiedä mitä tulosjoukossa on. Riippuu paljon siitä tuleeko meillä olemaan piirteitä yksittäisilläkään sanoilla joilla on samasta piirteestä versio etumerkillä ja ilman. (Tässä välissä toteutetaan piirteiden yhdistely koodiin.)

Asioita joista jää vaihtoehtoisia suuntia tutkittavaksi, etumerkin käsittelyn lisäksi: 1) Riittäisikö adjunktoitumisen mahdollistajaksi pelkkä kongruenssi? Jos ei olisi erikseen adjunktoitavuuspiirrettä, mutta se että piirteet yleensä voivat muodostaa ristiriidattoman joukon tekisi sen mahdolliseksi? Se olisi aika hurjaa, ja helposti yligeneroisi jollei olisi tarkka leksikkoa muodostaessa, mutta ehkä polku joka kannattaa käydä läpi. Siitä tulisi helposti psykologisia sivuvaikutuksia, jos lapsen kielen lähtötilanne olisi vähän piirteitä, niin adjunktoituminen olisi melko rajatonta. Siitä seuraisi mm. että kaikissa sanaluokissa voisi rakentaa yhdyssanoja laittamalla kaksi syntaktisesti samanpiirteistä sanaa peräkkäin. 2) Miten kongruenssin vaatimus suhtautuisi siihen että on vaikkapa X:jotain ja X. Onko jälkimmäinen jokeri joka kongruoi kaiken kanssa, vai onko niin että sellaisia ei leksikkoon tarvita? Toteutan sen aluksi jokerina. Kongruenssi rikkoutuu vain jos on X:jotain ja X:muuta.

Jaaha, muistui kun törmäsi siihen uudelleen mikä se oli se syy alkuperäinen wh+n -noston ratkaisema ongelma. Kun on tilanne jossa nostetaan 'kenen paidasta' niin 'paidasta' on pääsana, mutta 'kenen' sisältää wh-piirteen. Jos ne yhdistää 'kenen paidasta' niin silloin ne voidaan nostaa. Vaihtoehto olisi muuttaa wh-nostoa niin, että jos se on argumentti, nostetaan se minkä argumentti se on jne, niin kauan kun päästään johonkin joka ei ole vielä kiinni päärakenteessa. 'Kenen+paidasta' -hypoteesissa tulee mukana se oletus, että gen+n on myös yleisesti ymmärrettävä adjunktilausekkeeksi. Siinä tulee se ongelma, että se ei ole kongruentti yhdistelmä aiemmin kuvatulla tavalla. Ehkä pitää luopua siitä adjunktihypoteesista genetiivin suhteen. Muutetaan wh-nosto nostamaan koko 'vapaa' rakenne josta wh-piirre löytyi.

Edellinen wh-nosto rakenteen sisältä hoitaa sen pulman että koko lauseke nostetaan, mutta siitä jää se ongelma, että pitää oikeuttaa miten wh-rakenne jää koko rakennelman reunalle. Aiemmin se hoitui niin, että wh-lausekkeella oli piirteitä joilla se asettaa koko loppulauseen itsensä argumentiksi, esim. =v, mutta nyt kun itse wh-lauseke jää nostetun rakenteen sisälle, niitä ei päästä käyttämään. Hmm. Onnistunut wh-nosto tekee wh-lausekkeestakin argumentin ja vastaisuudessa nostot nostaisivat koko sen rakenteen. Siitä saisi syklisen noston nätisti, mutta pelkään että siitä tulee vielä komplikaatioita. Keksisinkö vaihtoehdon sille että wh nostetaan uudestaan? On aina hyvä jos on toinen ratkaisu odottamassa.

Yksi suunta mitä täytyy miettiä tässä on wh-rakenteiden ja relatiivipronominien suhde. Molemmissa tarvitaan wh-noston kaltaista kauaskatsovaa mekanismia ja wh/rel-elementin täytyy päätyä koko rakenteen reunalle. Relatiivilauseillakin on vastaava gen+n mahdollisuus kuin kysymyksillä: 'Pekka tapasi tytön, jonka+kirjeen hän sai kesällä'. Siinä ollaan taas tilanteessa jossa wh/rel asettuu koko rakenteensa (relatiivilauseen) eteen ja pääsana joka täyttäisi relatiivilauseeseen argumenttipaikan on eri kuin mihin relatiivilause viittaa. Katsotaanpa lisää: 'Pekka tapasi tytön, jonka kirjan palauttamisen kirjastoon hän oli unohtanut.' Siinä on relatiivilauseena 'hän oli unohtanut tytön kirjan palauttamisen kirjastoon'. Siirtyvä kokonaisuus on sellainen minkä ylläoleva sääntö ylimmästä vapaasta pääsanasta ennustaisi. Tämä on kuitenkin siitä helppo esimerkki että tässä siirtyvän kokonaisuuden sijoittuminen vasempaan reunaan ei vaadi ihmeempiä, se on siirtymäkohteen vieressä. Vaikeampi olisi joku, jossa siirtymäkohde olisi joku relatiivilauseen objektin argumentti. Saako sellaista luotua? 'Pekka löysi paidan, josta Merja oli ottanut kuvan juhlissa.' Siinä on 'kuvan paidasta' argumentti ja jos tehdään vain nosto niin päädytään sanajärjestykseen 'Pekka löysi paidan Merja oli ottanut josta kuvan juhlissa'. Yksi mahdollisuus joka tuli mieleen on, että kun wh/rel nostetaan, se aluksi liitetään rakenteen päälle vasemmalle ja sitten kun se on näin normaalissa siirtymäpaikassa, sitten tapahtuu normaali siirtymä. Eli jaetaan wh-siirtymä kahdeksi osioksi, joista ensimmäinen jättää jälkensä rakenteeseen. Tämä tuskin vielä riittää, mutta ainakin jättää elementin paremmin hollille, jos siitä on mitään apua. Kokeillaan miltä näyttää.

(Välisoitto: järjestetään selkeämmäksi hakupuun piirto. Tehty.)

28.10. 2019
Mietin että pitää vielä yrittää wh-nostoa lokaalisti, eli ei yritetä etsiä wh-piirrettä syvemmältä rakenteesta ja nostaa sieltä vaan nostaa sitä läheltä, samalla tavalla kuin muita nostoja. Onnistuakseen se tarvitsee syklisiä tarpeettomia tai perusteettomia wh-nostoja joilla pidetään wh-kantajia lähellä niin kauan kun niitä tarvitaan.

29.10. 2019
Lokaalille nostamiselle on nyt toteutus joka on vielä vähän vajaa. Mielikuva jota tätä johdattaa on kolmen langan palmikointi. Siinä missä aiemmin mentiin kahdella langalla jotka kietoutuivat toistensa ympäri niin nyt mukana on kolmas joka kiedotaan aina palmikon ympäri kun kaksi lankaa ovat tehneet operaation. Tämä kolmas lanka on vasemman reunan fokus/wh.

Sitä miettiessä ja miettiessä vasenta reunaa yleensä tuli mieleen se, että verbien fokusointi voi olla haastava näille mekanismeille ja että ne tapaukset täytyisi pitää pohdinnan keskiössä ettei tule mietittyä ratkaisuja jotka kusahtavat niihin. Esimerkkilause voisi olla 'Kuvasiko Merja juhlissa Pekan paitaa'. Hm, se taitaa olla liian helppo, alussa esitetään verbi ja kaikki muu menee argumentteina siihen. Pitäisi olla jotain jossa nostettu verbi on tarpeeksi kaukana sen argumenteista. Kiinnostavaa kyllä se ei taida onnistua. Ei onnistu *'ostiko Pekka luuli Merja kirjan'. Samoin *'nukkuuhan Merja tiesi liito-orava puussa. Huomataan myös että jos tulee negaatio tai perfekti/pluskvamperfekti aikamuotona niin niiden tarvitsemat apusanat vasemmalla reunalla päätyvät olemaan ne joihin vasemman reunan päätteet tarttuvat. 'Olihan Merja nukkunut' ja 'Eihän Merja ollut nukkunut', vrt. 'Merja oli nukkunut' ja 'Merja ei ollut nukkunut'. Noissa pitää vähän miettiä kumpaan subjekti ja kieltosana liitetään, apuverbiin 'oli'/'ollut' vai pääverbiin 'nukkunut', vai subjekti kieltosanaan ja se jompaankumpaan, koska *'Merja nukkunut' ei toimi.

Olisi siistimpää tehdä wh-piirteen haku niin että wh-piirre on vahva, se lasketaan mukaan piirteisiin vaikka se tulisi argumentista eikä pääsanasta.

31.10. 2019
Vahvan wh-piirteen kanssa tulee se ongelma, että jotenkin pitäisi estää sen loputon nousu, esim. relatiivilauseessa(?) 'Pekka tiesi mitä Merja etsi' pitäisi estää ettei tule 'mitä Pekka tiesi Merja etsi'.

1.11. 2019
Mietityttää kesän Chomsky-luento ja siinä painotettu workspacen rooli mergessä. Chomsky suuntaa huomiota pois syntyvästä puurakenteesta, koska siinä on liikaa mahdollisia noodeja mergettäväksi ja kohti työtilan määritelmää jossa on mahdollisimman vähän noodeja käsillä. Minun mallissa ollaan jo aika pitkällä siinä suunnassa: on aina ylin noodi ja sen oikeanpuoleinen lapsi, eikä oikeastaan muuta. Wh-siirtymä kolkuttelee siinä ja yrittää tulla mukaan kolmantena lähteenä.

5.11. 2019
Olen yhä siinä pulmassa että miten estetään wh-piirteen loputon nousu. Ja toisinpäin, miten tehdään relatiivipronominista alisteinen sen pääsanalle. Jos ja kun pitää laittaa relatiivilause paikalleen alisteiseksi pääsanalle, ongelmana on aina se, että pitää päättää milloin relatiivilause on valmis ja että nyt nosto tapahtuu, ja että seuraavat sanat kuuluvat päälauseeseen. Ei voi vain sen perusteella mitä relatiivilause nyt pitää sisällään päättää varmasti että nyt se on valmis eikä tule jatkumaan. Joko on pidettävä molempia vaihtoehtoja rakentumassa -- jatketaan tai päätetään -- tai on katsottava seuraavan sanan perusteella mitä tehdään. Tämä eteenpäin katsominen on yksi asia mitä haluan nykyisin välttää, kun ei sekään varmasti kerro tarpeeksi: Jos on vaikka 'Mies joka nukkui ja...' niin se voi jatkua 'Mies joka nukkui ja kuorsasi' tai 'Mies joka nukkui ja poika joka oli hereillä'. Edellisessä jatketaan relatiivilausetta, jälkimmäisessä se päätetään ennen konjunktiota. Se, että meillä on päätös tai arvaus, että nyt relatiivilause päättyy ilman muita perusteita kuin että se on mahdollista, voisi olla syy tehdä samoin relatiivipronominin nostolle. Ehkä joku ehdottomampi syy tarvitaan koska ikinä ei tapahdu niin että relatiivipronomini nousisi paikaltaan. Jos sillä se vapaus nousta olisi, niin olisi outoa jos sitä ei ikinä käytettäisi edes runollisessa käytössä. Se on oikeastaan hyvä muistutus siitä kuinka vapaanoloisen sanajärjestyksenkin kielessä on joitain kovia kulmia.

Relatiivilauseen päättyminen, relatiivipronominin asettuminen alisteiseksi pääsanalle ja relatiivipronominin nostamisen loppuminen ovat kolme ilmiötä jotka tapahtuvat yhdessä. Ja niille on helppo asettaa järjestys. 1) Päätetään relatiivilause, eli suljetaan sen aukiolevat argumentit kunnes meillä on relatiivilauseen sisäinen sanajärjestys oikein ja relatiivipronomini ja pääsana työtilassa käsillä olevina lausekkeina. 2) Relatiivilauseke asetetaan pääsanan argumentiksi. 3) Otetaan seuraava sana, ja tälle vain pääsana on käsillä, relatiivilauseke on jäänyt saavutettamattomiin argumenttina.

Tässä pitäisi tehdä ero siihen tilanteeseen, jossa relatiivipronominia muuten nostetaan perusteettomasti vain jotta se olisi käsillä kun sitä tarvitaan relatiivilausekkeen argumentiksi. Ei voida tehdä sitä houkuttelevaa eroa että nyt relatiivipronominia ei enää nosteta, koska se on nyt tyydytetty, se on argumentti -- se saa sen statuksen jo relatiivilausekkeessaan.

9.11. 2019

Edellisessä lähestyttiin sitä yleisempää kysymystä että voiko sana olla monessa paikassa argumenttina. Relatiivipronomini olisi pääsanan argumentti ja argumenttina relatiivilauseessa, yleensä sen verbillä. Suomen kielessä on sanoja jotka pakkaavat monta lauseenosaa samaan sanaan, mutta näissä ei välttämättä ole kyse argumentin täyttämisestä. Verrataan vaikka 'Nukkuisitko?' vs 'Nukkuisitko sinä?'. Ensimmäisessä verbille voisi sanoa että sillä on subjektiargumentti mukana, mutta jälkimmäisessä osoittautuu että siitä huolimatta sille voi antaa subjektiargumentin. Se, että relatiivipronomini täyttää kaksi argumenttiroolia voisi joko perustua siihen että se oikeasti täyttää kaksi argumenttiroolia ja se on legitiimi vain silloin kun se on täyttänyt kaksi argumenttiroolia tai sitten se täyttää argumenttiroolin ja jonkun toisen roolin. Tämä olisi vähän epämieluisaa koska pitäisi alkaa määritellä että ainakin näiden piirteiden on tyydytyttävä, kun nyt voidaan sanoa että kunhan joku piirre tyydyttyy. Ehdokkaita toisiksi rooleiksi on tähänmennessä yksi: adjunkti. Voi aina keksiä muutakin, mutta katsotaan aluksi sitä mahdollisuutta. Adjunktin mahdollisuudet jäivät siitä Chomsky-luennostakin minulle auki, siinä oli puhetta jonkun teoriasta jossa adjunktien ja koordinaation takaa löytyy yhteinen ilmiö, ja joskus päädyin itsekin johonkin senkaltaiseen, mutta en enää muista miten se oikein meni.

Mietitään perinteisiä adjunktitapauksia ja koordinaatiota, jos saataisiin aluksi otetta siitä mikä niissä voisi olla yhteistä. Huomataan että jos on koordinaatiolause 'A ja B juoksevat' ja 'A tai B juoksee' niin se koordinoiva osa kertoo ollaanko monikossa vai yksikössä. Se hallitsee rakennettaan, mutta toisaalta koordinoidut osat määräävät onko koordinaatiolauseke N vai V vai mitä. Siinä on sama ongelma kuin 'kenen N ... ?' kysymyksien kanssa, joissa 'kenen' aiheuttaa sen lausekkeen wh-noston, ja N määrää mistä se on noussut. Lauseke tarvitsee molempien piirteet. Koordinaatiolausekkeissa se menee vielä hankalammaksi, koska on vähintään kolme palaa: X1, koord, X2. X1:n ja X2:n pitää kummankin olla kategorioiltaan yhteensopivia, mutta kaikilta piirteiltään ei. Voi olla vaikkapa X1 yksikössä ('Pekka') ja X2 monikossa ('veljet'). Kategorioiden yhteensopivuus vaaditaan, koska ei voi olla vaikkapa 'Pekka ja nukuin lähti aamiaiselle', jossa ajatus olisi että X2=nukuin on koordinoitu mukaan, mutta sillä ei ole vaikutusta koordinaatiolausekkeen piirteisiin, vain ensimmäisellä on. (Vaikka 'Nukuin ja Pekka lähti aamiaiselle' toimii se toimii koska sen voi tulkita 'Nukuin ja [Pekka lähti aamiaiselle]' kun haluttaisiin '[Nukuin ja Pekka] lähti aamiaiselle.'). Mistä koordinaatiolauseke saa kategoriapiirteensä? Onko se kaikkien koordinoitujen elementtien kategoriapiirre yhdistettynä vaiko joku koordinaatioelementin oma piirre joka aktivoituu koska koordinoidut elementit ovat tietynlaisia tai koska koordinaatiolausekkeelta tarvitaan tiettyä kategoriaa? Onko kategoriapiirre sillälailla vahva että se nousee läpi koordinaatiolle? Jos se menee näinpäin, että koordinaatio hallitsee elementtejään (merkitään tätä vaikka &(X1, X2), niin sitten 'kenen auto' -tilanteessa haluttaisiin olla X1(gen) ja gen:stä nousee wh-piirre (ja ehkä kategoriapiirre jos ei sitä erikseen estetä). &(X1, X2) on vähän ongelmallinen kaksine argumentteineen, haluttaisiin jotain tyyliin &(X1(&(X2))). Hm, sivuajatus: koordinaatioiden parseroinnissa pitää huomata että tuo koordinaation luonne on jotain joka voidaan päättää vasta kun päästään varsinaiseen koordinaatioelementtiin, mutta jo siinä vaiheessa on pitänyt kyetä laittamaan koordinoituja palasia rinnakkain rakenteeseen. Tämä viittaisi johonkin tasa-arvoiseen X1+X2+X3 adjunktioon, johon päätetään &(X1+X2+X3) tai |(X1+X2+X3). Miten rakennetaan tuollaista adjunktiota? Hierarkkinen rakenne, jossa koordinaatioelementti on pääsana olisi muotoa [.& X1 [.& X2 [& X3]]], mikä on aika houkuttavaa, mutta operaatioiden ketju jolla tuohon päästään on hankalampi. Adjunktimpi tulos olisi:

e:X1
e:X2
a:X1+X2
e:&
i:[.& X1+X2 [ & ...]]
e:X3
a:[.& X1+X2 [ & ...]]+X3

20.11. 2019

On ollut hermoverkkokokeiluja tässä välissä, mutta jatketaan tätä ettei unohdu mihin asti pääsin. Viimekerralla päästiin tasa-arvoiseen X1+X2+X3 -adjunktioon, jota hallitsee konjunktio, eli &(X1+X2+X3). Käytännössä tämä toteutuisi &(X1+X2)+X3. Tässä tulisi sitten se etu, että &:n ja X3:n piirteet yhdistyisivät luontevasti. Silloin kun X tarkoittaa isompaa lauseenosaa tai kokonaista lausetta, riittääkö että käsitellään vaan sen pääsanaa. Jos on esim. 'Pekka ajoi ojaan ja Merja katseli vierestä', niin siinä on &(ajoi)+katseli.

Mitenkäs adjunktirakenne 'Kenen auto'-rakenteissa? Niiden adjunktitulkinnalle (kenen+auto) oli mahdollisena esteenä sanajärjestyksen tiukkuus. Suomessa 'auto kenen ajoi ojaan' on marginaalisesti hyväksyttävä, mutta englanti on aika ehdoton sen suhteen että genetiivi ensin ja sitten pääsana. Ja yleensä pelkkä genetiivi ei riitä, pääsana tarvitaan, tai tarvitaan genetiivi toimimaan agentin roolissa ("Pekka's attack to Rome"). Yhä tuntuu siltä että 'Kenen auto' olisi luontevammin jotain jonka pää on 'auto', mutta rakenteella on wh-piirre. Vahvan wh-piirteen hypoteesi tähän. Se on helposti ymmärrettävä: jos piirre on vahva, rakenne saa sen piirteen vaikka piirteen antaja ei olekaan rakenteen pääsana. Sen toteuttaminen on vähän kömpelöä koska tähän mennessä olen seuraillut että mikä on rakenteen pääsana ja kun kysytään mitkä ovat rakenteen piirteet, katsotaan heti mikä on rakenteen pääsana ja otetaan ne sieltä. Nyt niitä pitäisi keräillä matkan varrelta. Toisaalta nytkin jo keräillään matkan varrelta piirteitä jotka on jo käytetty. Toteutetaan vahva piirre '*wh'.

11.12 2019

"Riikan kimaltavasta topista pyysi Merja Pekkaa ottamaan kuvan _ juhlissa" - mietityttää se, että mielivaltaista fokusointia voi tehdä muutenkin kuin kysymysten kanssa. Fokusoitu elementti pitäisi kuitenkin saada alkuperäiselle paikalle rakenteeseen. Kun tuollaista lausetta kuulostelee, niin tuntuu että siitä ei saa tolkkua jos sen lukee monotonisesti. Pitää painottaa fokusoitavaa kohtaa: "Riikan kimaltavasta topiSTA ... pyysi... " tai "RIIKAN kimaltavasta topista...". Se vihjaisi siihen että kuulijan pitää saada tietää että tällä on nyt fokuspiirre, mikä edelleen kertoo että fokuspiirteen läsnäolo on erityinen asia, se ei aina ole ensimmäisellä lauseenosallakaan. Samoin kuin wh-piirteen kanssa ei ole kovin siistiä keinoa määritellä mikä kaikki on fokusoinnin takia nostettavaa lauseenosaa. DP/NP:hän se noissa tietysti on, mutta ei ole puhtaasti rakenteellista keinoa (eli sellaista joka ei anna erityiskäsittelyä piirteelle D vs V, X tai Y) määritellä mikä alue nostetaan. Voi olla 'Riikan puolison kimaltavasta topista...', 'Riikan löytämästä kimaltavasta topista...'. Yksi mahdollinen rakenteellinen keino oli että otetaan siirrettäväksi rakenteeksi kaikki se mikä on yhdistettävissä suoraan syntyvään lauseenosaan, mutta sille säännölle tulee luontevasti kaksi falsifiointimahdollisuutta:

1. On siirtyvä rakenne jossa itsessään on epäjatkuvuuskohtia, sanoja jotka eivät yhdisty suoraan edelliseen sanaan vaan vaativat seuraavia sanoja muodostaakseen yhdistyvän kokonaisuuden.
2. On siirtyvä rakenne joka yhdistyisi suoraan seuraavaan sanaan joka ei ole siirtyvää rakennetta.

1) olisi esim 'Riikan puolison huolellisesti kätkemästä kimaltavasta topista...' - siinä [huolellisesti kätkemästä] olisi oletettavasti yhdessä ja 'puolison' voidaan yhdistää 'huolellisesti' vasta kun [huolellisesti kätkemästä] on kasattu. Siinä on kyllä kummallisuus joka saattaa olla johtolanka jostain: ei voi olla 'Riikan puolison kätkemästä huolellisesti topista...'
2) 'Romuttuneen auton kuski näki vierivän ojaan.' Siinä alun GEN-GEN-NOM on ihan legitiimi yhdistelmä, suoraan liitettävissä toisiinsa ja vasta kun päästään 'näki ... vierivän' niin päästään toteamaan että GEN-GEN onkin oma rakenteensa joka ei liity NOM:iin vaan on peräisin tästä välistä. Tämä miten peräkkäiset nominilausekkeet pilkotaan on muutenkin moniselitteinen juttu, voisi olla vaikka GEN GEN-NOM ('Auton onnettomuuden uhri näki vierivän ojaan'). Siinä täytyy hyväksyä että yhdistäminen voidaan jättää tekemättä. Jos niin voidaan tehdä, tarkoittaako se, että aina on käytävä myös se mahdollisuus läpi, vai onko se optio mahdollista vain tietyissä konteksteissa, esim. kun ollaan fokus- tai wh-piirteen alaa mittaamassa?

Löytyykö siis muita konteksteja joissa ambiguiteetti yhdistelyssä on sallittua? Pitäisi löytyä, oli niitä aiemminkin nähty esim. relatiivilauseen ja päälauseen välillä. Vaikka relatiivilause selvästi olisi erityiskonteksti kuten wh ja fokus. Mitä muita?

19.12. 2019
Yksi asia joka on pyörinyt paljon päässä ja jota on toteutettukin muttei yleisellä tavalla, on se hypoteesi että piirteiden yhdistelyä käyttävät konstituenttipuut ovat esitettävissä noodien verkostoina joissa kustakin piirteestä tai leksikko-oliosta tarvitaan vain yksi ilmentymä (noodi) ja piirretarkistukset ja rakenteiden yksilöinti tapahtuu aktivoimalla yhteyksiä järjestyksessä. Jos yhteydet luettelee listana, niin siinä on rakenne. Kaikki mahdolliset yhteydet == kaikki mahdolliset puut. Siinä on tietysti se hyvä puoli, että ei tarvitse kopioida mitään tietorakenteita, kutakin noodia on vain 1 kpl. Vaikka olisi 1000 erilaista parsintaa, niin ne kaikki voidaan esittää yhdessä verkostossa ja tuhantena erilaisena merkkijonona jotka voidaan päräyttää verkostoon aiheuttamatta siinä muutoksia. Tai tarkennetaan: tarvitaan lisäksi n kappaletta numeraationoodeja, joissa n on lauseen pituus sanoina. Esimerkiksi sanan 'talo' piirre n individuoituisi näin: C0--talo--n. 'Talo palaa' olisi jotain tämänsuuntaista:

C0--talo--n
 |         \
C1--palaa--=n

22.12. 2019
Jos binääripuuta litistää päänoodiksi ja sen alisteisiksi noodeiksi, pystytäänkö pitämään erottelua rakenteen [X [H Y]] ja [[X H] Y]  välillä? Ensimmäinen olisi xbar-rakenne [SPEC [HEAD COMP]], jälkimmäinen [[SPEC HEAD] SPEC]. Vasemmalta oikealle ja alhaalta ylös-parsinta luo helpommin jälkimmäisen kaltaisia, yhdistäen pääsanaan heti kun on mahdollista. Sellaisen rakenteen semanttisen tulkinnassa on tärkeää, että ei katsota pääsanan H_0 komentamia elementtejä vaan H_max komentamia elementtejä. Vaikea sanoa kuinka paljon asiat menee rikki jos mennään siihen, mutta saattaa olla että se on puolustettavissa. Jotain spec-comp jaon murenemista on kai myöhäisemmässä minimalismissa ollutkin, soveltuisikohan ne argumentit tähän?

Parseroinnin järjestys tulee laittamaan päänoodin ja sen alisteiset noodit keskinäiseen järjestykseen, eli siitä saa mikä on 1. alisteinen noodi, mikä on 2. alisteinen noodi jne. Joissakin kielissä tämä tarvitaan: 'Phil sold the company a pencil', jossa on
(tällä parserilla) [[[N:nom V] N:nom] N:nom] ja ne mappautuvat semanttisesti subjektiksi, objektiksi ja toisenlaiseksi objektiksi. Ahneus on tällekin parserille ongelma: '...a pencil used by MM' pitää käsitellä loppuun ennenkuin se liitetään V:hen. Mutta se on normaalia. Enemmän huolettaa taas siirtymät.

23.12. 2019
Junassa lueskelen Stroikin 'Locality in Minimalist Syntax':a ja miten siinä oli ratkottu wh-pulmia. Siinä rakennetaan alhaalta ylös, mutta se soveltuu huonosti parserointiin koska leksikaalinen elementti sijoitetaan ensimmäisen kerran rakenteeseen sen pohjimmaisessa kohdassa, eli jos on vaikka wh verbin objektina ja siirtynyt lauseen ihan lopusta niin rakentaminen alkaa sieltä pohjalta, vasta kun koko lause on kuultu. Ajatus siitä että pidetään niitä elementtejä joiden piirteet eivät täysin tyydyttyneet käsillä työtilassa kunnes löytävät paikkansa on kyllä soveltuva minunkin malliin, kunhan merkataan nämä näin käyttäytyvät piirteet eri tavalla kuin piirteet jotka saavat jäädä tyydyttymättä.

Jonkinlainen Survive-periaate voisi auttaa minunkin parserissa kun ei tarvitsisi pitää wh-rakennetta vapaana kunnes se löytää paikkansa ja sen jälkeen keksiä miten se nostetaan takaisin lauseen alkuun. Ehkä, tämä pitää tarkistaa. Voisin muokata parseria niin että siellä on survivors-kasa, josta voi myös mergetä.

31.12. 2019
Takaisin siihen asiaan että parseroinnin järjestys järjestää myös argumentit. En ole nyt varma tekeekö parseri monia ekvivalentteja tuloksia, eli johtavatko erilaiset operaatioiden ketjut samaan lopputulokseen. No, jätetään se yhä hautumaan. Toinen asia joka mietityttää on parsereiden taipumus lievään kombinatoriseen räjähdykseen lauseen pituuden kasvaessa. Vaiheet auttaisivat siinä, jos voisi jotenkin eristää että vaikkapa kaikki jonkun DP:n tulkintamahdollisuudet eivät aiheuttaisi n-kertaista kasvua koko lauseelle. Mitä keinoja minun parserissa on sinetöidä joku pätkä käsitellyksi että seuraava pätkä tarvitsee käsitellä vain yhdestä lähtökohdasta? Tämähän liittyy tuohon ekvivalenssiin.

Jos on nykyisen rakenteen pää H ja sen päälle aletaan rakentamaan lisää, niin uusi rakennelma on sama kaikille H, kunnes se on käyttänyt H:ta rakenteessa ja sen seuraavat mahdollisuudet perustuvat H:n sisäiseen rakenteeseen. Koitetaan saada tästä otetta.

4.1. 2020
Katsotaanpa nyt niitä parserin tiloja järjestelmällisemmin. Kun on sanat A B tässä järjestyksessä, eli B seuraa A:ta, niin niiden mahdolliset suhteet on:
0. Vierekkyyssuhde: A edeltää välittömästi B:tä (=A.f('B'))
ja joku näistä:
1. Rakenne johon A kuuluu on B:n argumentti: ...Pekka(A) näki(B)... (=B.arg())
2. B on argumentti rakenteelle johon A:kuuluu: ...näki(A) Merjan(B)... (=B.r())
3. A:lla ja B:llä ei vielä ole rakenteellista yhteyttä.
   a. B kuuluu rakenteeseen josta tulee A:n rakenteen argumentti: ...näki(A) iloisen(B)...
   b. B kuuluu rakenteeseen jonka argumentiksi otetaan rakenne johon A kuuluu: ...Merjan(A) tavallisen(B)...
   c. A kuuluu siirtyneeseen rakenteeseen ja se tulee liittymään johonkin toiseen rakenteeseen kuin B

Tässä kiinnostava on tuo 'rakenne johon A kuuluu'. Jos lause alkaisi vaikka 'Pekka näki Merjan hyökkäävän...' niin rakenne johon 'hyökkäävän' kuuluu ei saa olla vielä 'näki'. Silloin seuraava argumentti menisi sen argumentiksi. Pitää lykätä argumentin asettamista kunnes kaikki argumenttiin liittyvät palaset on käsitelty. Vierekkyyssuhde on voimassa.

Nykyparserissa olen määritellyt nuo operaatiot suhteessa rakentuvaan puuhun. Siinä A ja B eivät viittaa suoraan sanoihin, vaan puun oksiin ja sikäli se pystyy kuvaamaan joitakin noista yksinkertaisemmin.
0. Vierekkyyssuhde: Uusi sana C mergetään rakenteeseen [.A A B]. => [.C C [.A A B]]
1. Edellinen rakenne [A B] on argumentti uudelle sanalle C:  [.C C [.A A B]] => [.C [.C [.A A B] C] B]
  jos X = C, Y = [A B], Z = B niin [X Y] => [[Y X] Z]
2. Uusi sana C on argumentti edelliselle rakenteelle [A B]:  [.C C [.A A B]] => [.A [.A [.A A B] C] B]

Katsotaan miten tämä toimii jos puussa pitää kaivaa syvemmälle:
(0) [.A A B]
(0) [.C C [.A A B]]
(1) [.C [.C [.A A B] C] B]
    X = [.C [.A A B] C], Y = B, Z = B, [X Y] => [.C [.C B [.C [.A A B] C]] B]
(1) [.C [.C [.C [.C A [.C [.C [.B B A] C] A]]

Tuon esittäminen vierekkäisyyssuhteella menisi:
0. B.precedent=A
1. B.precedent=A => B.args.append(A.free_precedent())
2. B.precedent=A => A.free_precedent().args.append(B)

Eli tarvitsisi free_precedent-metodin, joka etsisi edellisen edeltäjän jota ei ole käytetty argumenttina

[[Merjan ^hyökkäävän] linnaan]

26.1. 2020
Onpa taas sotkua. Toteutettu tuo edellinen (Bar-alkuisissa tiedostoissa, koska konstituentti on 'palkki', jossa yhdellä pääsanalla on lista argumentteja, käytännössä pääsanakonstituentti sisältää projektion konstituentista.). Mietityttää määreposition ja komplementtiposition ero yleensä. Nyt molemmista syntyy pääsanan argumentteja, siinä vaiheessa ei enää määreellä ja komplementilla ole eroa. Ongelmat on siinä, että argumentit jotka yleensä ovat komplementteina voivat joissakin tapauksissa nousta määrepositioon ja määreet jäädä komplementtipositioon, mutta siinäkin on tapauksia joissa järjestystä ei koskaan voi muuttaa. Olen usein käyttänyt '-' ja '='-merkkejä erottamaan onko piirre sellainen joka oikeuttaa noston määrepositioon vai ainoastaan komplementiksi, mutta se on vähän turhan ad hoc. Lisäksi on fokusmekanismi, jolla voi oikeuttaa sen, että argumentti jonka pitäisi olla komplementtina ilmestyykin pääsanan eteen. Houkutteleva ajatus on, että komplementtipositio olisi normaali ja fokusmekanismia käytettäisiin aina kun jotain onkin määrepositiossa. Siinä on riskinä se, että fokusmekanismista tulisi niin lokaali ja helposti tukkeutuva että se ei enää pystyisi hoitamaan pitempiä siirtymiä joita varten sen alunperin laitoin. Mutta pitää vähän koetella.

Adjektiivit ovat määrepositiossa ja niitä voi olla monta. Pitäisi myös mahduttaa genetiivit ja D:t oikeassa järjestyksessä. Näyttää siltä että foc-piirre päätyy hoitamaan '-':n tehtävää toisten piirteiden puolesta. Tämä ei varmaankaan ole vika.

20.3.
Mietitään nyt sellaista hypoteesia että myös normaali spec ennen pääsanaa käyttää samaa mekanismia kuin pitkänmatkansiirtymät. Tämä ei oikeastaan ole kaukana siitä ajatuksesta jota yritin kauan pelastaa, jossa pitkänmatkansiirtymät ovat vain paikallisia siirtymiä, mutta jatkuvien nostojen rakenteet ovat jättäneet ne lopulta kauas toisistaan. Jos on nostomekanismi jota käytetään usein ja useimmiten toteuttamaan sen, että edeltävästä sanasta tulee seuraavan sanan argumentti: esim. 'keltainen auto' olisi jotain jossa keltainen on nostettu auton argumentiksi, [.auto keltainen] ja pääsana on rakenteessa aina vasemmalla. Tuo on toinen iso seuraus. Pääsana on aina ensin syntyneessä rakenteessa.

Mahdolliset ongelmat joissa tämän saisi ehkä kaadettua ovat tilanteet joissa jokin elementti jonka pitäisi pystyä nostamaan kaukaisempi B nostaakin läheisemmän A:n: 'B... A X' Tuo taitaa olla yleisesti noin: 'Minkä_B Pekka_A lainasi A B' ja 'Kuka_A lainasi A kirjan?' Toinen mahdollinen ongelma on estää liiallinen opportunistinen argumenttien nosto. Jos jokaista argumenttia voisi käyttää vain kerran, elementit jotka ovat jo käytetty jossakin argumenttina eivät olisi nostettavissa. Tämä olisi liian tiukka ehto relatiivilauseissa, joissa joko täytyy relatiivipronomini toimii sekä relatiivipääsanan argumenttina että relatiivilauseen jonakin argumenttina. Tosin siinä on sellainen hieno mutkistus, että parserointi näyttää vaativan että kun relatiivilause RP on muodostettu, täytyy historiasta kaivaa se pääsana johon sen on tarkoitus liittyä ja tästä historiasta nostetusta elementistä tulee sen yhdistelmän pääsana, eli tässä täytyy nostaa elementti toimimaan pääsanana, kun muuten nostellaan elementtejä toimimaan argumentteina. Tämä voisi tehdä sen tarvittavan eron: relatiivilauseessa elementin saa nostaa toimimaan argumenttina, koska sitä ei vielä ole käytetty argumenttina, ja relatiivipronomini saa nostaa itselleen pääsanan koska se on eri operaatio.

No nyt tuossa paljastuu, että kun argumentti etsii itselleen pääsanan, niin sekin on periaatteessa yksi ja sama operaatio vaikka pääsana löytyy siitä ihan vierestä tai jos se haetaan syvempää. Eli kun parseri on sanassa X, niin se hakee rakenteesta vapaata elementtiä Y josta joko tulee X:n argumentti tai X:stä tulee Y:n argumentti. Tuntuu liian yksinkertaiselta suhteessa kaikkeen mitä ollaan jo kokeiltu, mitä tässä en ota huomioon? Onko tämä toiminnaltaan nyt vastaava kuin perinteinen shift-reduce parseri? Meillä on kaksi sääntöä jotka yhdistävät X:n ja Y:n joko [.X Y] tai [X .Y] ja 'shift' joka jättää elementin odottamaan yhdistämistä. Eroa tulee ainakin kahdessa asiassa: siinä, että elementin voi yhdistää uudestaan joissakin tapauksissa (relatiivilauseet) ja että oletetaan että kun elementti nostetaan reducen myötä uuteen positioon rakenteessa, rakenteen 'muisti' järjestyy uudelleen, koska rakenne on muisti. Tuota pitää katsoa tarkemmin.

Jos X nostaa rakenteen Y ja muodostaa [X Y]:n, niin kun lähdetään etsimään seuraavaa vapaata elementtiä niin se tulee tapahtumaan etsimällä Y:stä. vaikka se on nostettu X:n rinnalle ja käsittelyssä sen jälkeen, se on yhä myös X:n lapsissa, ja koska se oli edellinen vapaa elementti, tiedetään että X:n ja Y:n välillä ei ollut vapaita elementtejä, joten seuraava vapaa elementti voi löytyä Y:n sisältä. Tuleeko siitä joku lumipalloefekti? Katsotaan 'Mitä lääkettä syömällä Pekka parantui?'

f('mitä').f('lääkettä').r().f('syömällä').arg().f('Pekka').f('parantui').arg().arg()
f('Pekka').f('parantui').arg().f('syömällä').f('Merjan').f('lääkettä').arg().r().r()

10.4.
Pekka tilasi jäätelön, Merja pirtelön ja Riikka kahvin.

Pariluennalliset koordinaatiolauseet ovat todella vaikeita, mutta jos keksii mekanismin niille niin sitten on syytä uskoaa että tämä mekanismi taipuu myös helpompiin tapauksiin.

Pekka keräsi sinisiä, Merja punaisia ja Riikka keltaisia kukkia.
Pekka keräsi sinisiä kukkia, Merja punaisia ja Riikka keltaisia.
*Pekka sinisiä, Merja punaisia ja Riikka keräsi keltaisia kukkia
?Pekka paitoja, Merja takkeja ja Riikka sukkia keräsi.
Pekka myi sinisiä, Merja osti punaisia ja Riikka varasti keltaisia kukkia.
Pekka myi sinisiä kukkia, Merja osti punaisia ja Riikka varasti keltaisia.

'Pekka myi sinisiä, osti keltaisia ja varasti punaisia kukkia'
Esimerkiksi tässä viimeisessä pitää olla 'sinisiä', 'keltaisia', 'punaisia' vapaana jotta lopussa voidaan tehdä [.kukkia sinisiä kukkia], [.kukkia keltaisia kukkia] ja [.kukkia punaisia kukkia]. Jos ne on jo asetettu verbeille objekteiksi, yritys tuoda 'kukkia' mukaan rikkoo no tampering-sääntöä. Vaikka meillä olisi parsinta jossa nuo ovat yhä vapaana, se että 'kukkia' liitetään yhdelle tai useammalle tai ei yhdellekään objektille tuo mahdollisuuksien kirjon jota on vaikea hillitä. Miten uudesta sanasta koordinaatiolauseessa tiedetään että tämä pitää sitten levittää kaikkiin koordinaatiohaaroihin?


1.7. 2020
Adjunkti/koordinaatiopohdintaa
Samankaltaisuus ei riitä ehdoksi sille, että kaksi elementtiä voidaan adjunktoida: sijamuotojen samuus rikkoutuu esim 'ostin jäätelön:acc ja maitoa:prt'. Jos samankaltaisuutta löyhentää niin että riittää että kategoria on sama, tulee ongelmaksi vilkas mahdollisten adjunktioiden luonti kun esimerkiksi verbillä on monta argumenttia.
Koordinaatioadjunktoinnissa itse koordinaatioelementti näyttää hyvältä vihjeeltä mitä tarvitaan: koordinaatioelementti voidaan adjunktoida sitä edeltävään tai sitä seuraavaan rakenteeseen ja syntyvä tuotos on edelleen adjunktoitavissa, ja siten voidaan keriä siihen mukaan edelliset koordinoitavat rakenteet. Tämä on epäsymmetristä adjunktointia: tarvitaan että toisella rakenteella on tietty adjunktoinnin mahdollistava piirre ja että molemmilla rakenteilla on jotain joka mahdollistaa että ne adjunktoituvat juuri keskenään.
Siitä seuraisi vaikeuksia tilanteessa jossa olisi vaikkapa ADJ:acc N:acc N:ill ja haluttaisiin että N:acc ja N:ill eivät adjunktoidu toisiinsa. Tarvitaan sijapiirteen samuus tai adjunktoinnin salliva yleinen piirre?

7.7. 2020
Piirteiden siistimisestä
Tarvittaisiin joku este sille kun verbi voi ottaa argumentin N:acc tai N:prt ja se on ottanut toisen, niin toinen ei ole enään otettavissa. Yleinen ratkaisu että vain yksi N:? ei kelpaa, koska täytyy voida ottaa myös N:nom ja paikallissijoja. Se olisi luontevaa esittää -N:prt|acc , mutta se miten se kuvataan piirrerakenteessa on ongelma. No, se taisi nyt ongelman esitettyä ratketa sillä että se kuvataan name:'N', value:'prt|acc' ja kun piirrettä verrataan niin se tehdään vähän mutkikkaammin, pilkotaan '|':lla. Siinä tulee se rajoitus että tälläinen poissulkeva tyydyttäminen toimii vain jos piirteillä on sama nimi.

8.7. 2020
Wh- ja relatiivilauseissa tarvittavat pitkän kantaman siirtymät, joissa kysymyssana tai relatiivipronomini on nostettu eteen menisivät ehkä siistimmin jos wh/rel -sanaan suhtautuisi kaksiosaisena elementtinä. Siinä on yhtenä osana pääkategoria joka ottaa komplementtina T-lauseen ja toisena osana sijamuoto joka mahdollistaa wh/rel -sanan toimimisen argumenttina T-lauseessa. Jakaminen tarvitaan jotta mahdollistuisi se, että tyydytettyään toisen suhteen elementti olisi yhä etsintäavaruudessa toisellekin suhteelle. Jakamisen toteutus on pohdinnassa.

Jakamisen voi tehdä niin, että jo leksikkopoiminnassa luodaan kaksi eri konstituenttia. Silloin ongelmana on pitää huoli, että konstituentit eivät päädy mihinkään outoon suhteeseen keskenään. Niillä ei saa olla piirteitä jotka reagoisivat toisiinsa. Linearisoinnissa huomioitaisiin vain ensimmäinen osa. Pitäisi tallettaa tieto että nämä ovat samaa sanaa.

Ongelma jakamisessa on, että se mahdollistaa sanan käytön kahdessa paikassa, mutta jos tarvitaan oikeasti syklinen siirtymä niin se ei riitä. En ole nyt varma tarvitaanko syklistä siirtymää.

20.7. 2020
Pulmia: Miten esittää tiukasti järjestyneet rakenteet esim. englannin prepositioissa? Ne rakenteet on muuten ehdottomia vaatimuksessaan että arg seuraa pääsanaa ja on sen viereinen rakenteellinen elementti, mutta jos on siirtymä niin silloin voikin jäädä pääsana roikkumaan ja hakea argumenttinsa kaukaa. Nyt ei ole koodattu järjestystä, =N voi tyydyttyä sillä että argumentti tulee välittömästi eteen (spec) tai taakse (comp). Vaihtoehtoja:

- Asettaa piirre ld (long distance) niille elementeille jotka saavat siirtyä kaukaa, tämä hoitaa poikkeukset ja muuten on tiukka =. Tässä voi vielä laajentaa piirteistöä luomalla vaatimuksen > joka sallii vain komplementtiargumentin. Suomelle tämä olisi vähän epäelegantti kun lähes kaikki suomen sanat saisivat ld-piirteen.
- Toteuttaa 'vaiheen raja' jotenkin, positio josta saa nostaa. Tarkoittaisiko tämä suomen tapauksessa että olisi useampia vaiheen rajoja jotta voidaan toteuttaa vapaampaa sanajärjestystä? Jos niin, niin sitten se vaiheen raja olisi helpompi merkitä piirteellä ja ollaan aika samassa kuin edellisessä, ld-piirre olisikin ph-piirre.
- Koittaa toteuttaa tiukkaa järjestyneisyyttä kaksiosaisella konstituentilla: jälkimmäinen osa on alisteinen ensimmäiselle, jolloin jälkimmäinen ei voi ottaa ensimmäistä konstituenttia edeltävää argumenttia omaksi argumentikseen. [.X1 a [.X1 X1 X2]] Tämä olisi elegantti.
Lähdetään kokeilemaan kaksiosaisilla konstituenteilla ja ld-piirteellä.

A picture of (who) -rakenne onkin hankala rakentaa alhaalta ylös. Siinä vaiheessa kun tuorein sana on 'of' niin 'a picture' on yhä vapaana. No joo, se korjautuukin tuolla kaksiosaisella konstituentilla. 'a picture' ei kelpaa nostettavaksi kun se ei ole of-konstituentin jälkimmäisen osan vieressä ja sillä ei ole ld-piirrettä.

Seuraako tuosta ld-piirteestä että pääsen kokonaan '=', '-' -jaottelusta? Kaikki on '='? Joo.

Suomen vapaa sanajärjestys, ainakin verbien argumenttien osalta, näyttää toteutuvan jos verbin jälkimmäisellä konstituentilla on ld-piirre.

23.7. Koordinaatiolauseita taas
Mietin sitä että jos meillä on tehty operaatiot A B C ja sitten kohdataan elementit D E F jotka halutaan koordinaatioasetelmaan, ja lause jatkuu sen jälkeen G H niin oikea tapa olisi asettaa ne näin:

      D
A B C E G H
      F

Eli D E ja F:lle kullekin C on edellinen elementti pinossa. Katsotaan miltä se näyttäisi hankalalla esimerkillä:

Pekka myi sinisiä,       |
Merja osti punaisia ja   | kukkia
Riikka varasti keltaisia |

      | myi sinisiä        |
Pekka | osti punaisia ja   | kukkia
      | varasti keltaisia  |

23.8. Operaatioita ketjuttamalla saa kyllä luotua rakenteita joissa komplementit asetetaan heti oikein lykkäämättä asetusta kunnes ne ovat valmiit, mutta tätä on vaikea yhdistää siihen että joka askeleella tehdään merge.
26.8. Ei ole ollut voimia tuottaa uusia ajatuksia tämän suhteen. Se mitä pitäisi miettiä on, menetetäänkö mitään oleellista jos operaatioiden ketjun ja syntyvän rakenteen suhteesta tehdään vähemmän suoraviivainen. Operaatioiden ketjusta saa tehtyä sitä vastaavan puurakenteen, mutta kun operaatioiden ketjuun lisätään operaatio, vastaava puurakenne ei synny lisäämällä puuhun jotain, mikä on harmi, vaan voi joutua muuttamaan jo mergettyjä oksia. Miksi aiemmin tämä vastaavuus toimi, mutta nyt ei?
Silloin kun lykättiin komplementtihaaran muodostamista sen varsinaiset internal merget tehtiin vasta kun kaikki palaset olivat paikallaan. T'll' oli se hinta, että koska ei voinut tietää onko paloja vielä tulossa, kokeellisia mergejä tehtiin oletuksella että tässä ne kaikki nyt ovat aina kun se on mahdollista ja syntyi liikaa mahdollisia rakenteita. Nyt haluaisimme tehdä ensimmäisen komplementtimergen heti kun se on mahdollista, odottamatta mitä muita paloja sieltä on tulossa ja tulevat palat rakentavat sen päälle niin kauan kun voivat. Vähemmän haarautumiskohtia parsinnalle, mutta komplementtihaara mergetään vaikka se vielä rakentuisi: tulee outoja puita joissa komplementiksi projektiossa X_0... XP ei päädy XP vaan yleensä ensimmäinen X' ja se pitäisi yhä tulkita niin että XP on se komplementti. Tuota voisi pitää vain esityspuolen ongelmana: kun X:ää haetaan, löydetään aina XP riippumatta siitä miltä puurakenne näyttää sillähetkellä. Olisiko sittenkin oikea tapa suhtautua tähän antaa rakentua tuollalailla oudosti ja jättää vapaaehtoinen viimeinen askel, jossa puu normalisoidaan? Palataan siihen.

5.9. Nyt kompleksit konstituentit on rakennettu niin, että sanan osia yhdistää ad hoc komplementtisuhde, mutta se on vähän hankala nykyään kun PromiseComp tekee komplementtisuhteesta erilaisen. Jos sen korvaisi normaalilla kompementtisuhteella tulisi esim. 'John (John1)' kompleksille vaikea antaa mitään tapaa jolla seuraavat elementit liittyisivät (John1) -puoleen, koska se sanakompleksin sisäinen komplementtisuhde löydettäisiin heti ja 'John' olisi pääsana ja '(John1)' jäisi piiloon. Se mitä sanakompleksilla haettiin oli ainakin se, että pystyttiin rajaamaan että kompleksin jälkimmäinen puoli ei voi ottaa speccejä, mutta jos se on PromiseComp se voi ottaa specin, tosin en ihan ymmärrä miltä sellainen rakenne näyttää.

Pää on sillälailla pöppöinen että yksinkertaisetkin asiat täytyy käsitellä tekstillä eikä mielessä. Mikä olikaan pitkänmatkan specin ja pitkänmatkan komplementin ero? Tarvitaanko sitä vai riittäisikö jompikumpi? Pitkänmatkan specissä käynnistäjä olisi pääsana joka hakee argumenttinsa jostain kauempaa edeltä. Pitkänmatkan komplementissa käynnistäjä olisi argumentti joka etsii pääsanaa jonka argumentiksi se sopisi. Pitkänmatkan komplementti kuulostaa hankalammalta ja ilman sitä olisi siistimpi systeemi, enkä nyt keksi millaiset lauseet ovat sen aiheuttaneet olettamaan. Jos pidetään vain pitkänmatkan spec, niin silloin pitkänmatkan spec/comp olisivat oikeastaan pitkän matkan argumentti, sama mekanismi hoitaisi molemmat.

Jos on pääsana P, niin se voi löytää argumenttinsa ainakin paikoista X ... Y P Z. Nyt kiinnostaa onko mekanismi ja sen lisensointi jolla P hakee Y:n erilainen kuin millä P hakee X:n. Tyypillisiä X:iä ovat wh-sanat ja relatiivipronominit, mutta fokusoituna sinne voi mennä ehkä mikä tahansa argumentti. Näissä on sitten kysymyksenä tapahtuuko lisensointi kaukaa hakemiselle pääsanan toimesta vai argumentin toimesta. Jos pääsanan toimesta, käytännössä kaikilla verbeillä olisi se. Jos argumentin toimesta, se olisi luontevaa wh-sanoille ja relatiivipronomeneille mutta muille fokusoituville sanoille ei niinkään. Onko jotain sanaa joka ei kelpaa speciksi, mutta kelpaa pitkän matkan komplementiksi? Onko jotain joka kelpaa speciksi, mutta ei komplementiksi? Tuo jälkimmäinen on ainakin houkuttava, jos jokainen mahdollisen specin pitäisi olla myös mahdollinen komplementti, niin silloin ainakin genetiivit, adjektiivit ja englannin sanajärjestyksessä subjektit tarvitsisivat selittämistä. 'gives John Mary a present' on jo aika rikki, mutta ei välttämättä liian rikki. Se tuossa kyllä on, että fokuspositio tuntuu olevan erityinen, jos olisi yleensä sallittua nostaa elementtejä jos nostava taho sen mahdollistaa niin pitäisi olla mahdollista tehdä rakenteita joissa nostettavia elementtejä voi ripotella vähän sinne tänne eikä juuri tiettyyn paikkaan.

Onko minulla edes mitään keinoa tehdä vasemman reunan ilmiöistä erityisiä? Niiden erityisyys voi perustua käsittelyjärjestykseen, siellä tehdään jotain jota ei voi tehdä myöhemmin, jotain jota ei voi korjata jälkikäteen. Tarvitaanko siinä jotain oletustoimenpiteitä jotka tapahtuvat vasemman reunan käsittelyssä jos mitään ei tehdä? Ja jos nämä ovat tapahtuneet, on myöhäistä korjata. Toinen syy olla vasemmalla reunalla on se, että sana ei vain sovi mihinkään muualle. Esimerkiksi '-pa', '-han' -päätteet ovat siellä koska jokin niissä estää niitä toimimasta normaalipaikoissaan. Ei, se ei voisi mennä ihan niin koska kyllä ne voivat kuitenkin täyttää normaaliroolinsa vaikkapa argumentteina: 'Pekkaapa Merja rakasti', sillä täytyy olla joku positiivinen syy olla tuolla edessä. Jos sillä on kyky ottaa T-lauseke komplementiksi? Silloin sen täytyisi olla niin, että se voi ottaa T-lausekkeen komplementiksi mutta ei speciksi. Vasemman reunan paloille voisi olla tyypillistä tuo että otetaan T-lauseke komplementiksi. Silloin siihen pitäisi liittää myös pakollisuus 'Merja rakastaa Pekkaapa' olisi väärin koska -pa:lla ei ole komplementtia. Komplementin pakollisuutta tarvitaan muissakin paikoissa, vaikkapa relatiivipronomineissa ja joissakin prepositioissa. Pakollinen komplementti on myös sikäli kiinnostava että viimeksi tuli stoppi parserikoodailussa kun mietin mikä olisi sopiva tapa liittää sanakompleksien osat toisiinsa, nykyinen piirretarkastus kun toisaalta mahdollisti hakemisen liian kaukaa eikä tuonut tuota pakollisuutta. Voisin ottaa käyttöön >-merkin osoittamaan tarvetta komplementille. >T tarkoittaisi että tätä heti seuraa T.

Pakollisen komplementin lisäksi on toinenkin pakottava mekanismi: adjunkti jonka täytyy adjunktoitua jonkun kanssa saadakseen tarvittavat ominaisuudet että voisi liittyä lauseeseen. Adjunkti joka ei pärjää yksin. Se muistuttaa vähän liikaa tuota pakollista komplementtia, paitsi että adjunktissa ei suoraan ole käsittelyjärjestyksellä väliä, mutta käytännössä taitaa olla: aluksi se elementti joka ei pärjää yksin ja sen jälkeen annetaan se mitä se tarvitsee. Ranskan värit on ongelma sitten. On kuitenkin adjunktoituvia jotka pärjäävät yksinkin. Adjunktien ja komplementtien ero parseroinnissa on kuitenkin aika dramaattinen. Jos B on A:n komplementti, rakenteessa näkyy vain A:n piirteet. Jos se on adjunkti, näkyy molempien A:n ja B:n piirteet.

Palataan '-pa' -päätteeseen. 'Pekkaapa Merja rakastaa' on sikäli hankala molemmille pakolliselle komplementille ja adjunktoinnille, että täytyy hyväksyä 'Merja' ennenkuin saavutetaan pakollinen T. Tämä tilanne, että vaikka vaaditaan pakollinen komplementti, se ei ole välttämättä heti seuraava sana, pätee varsinaisissa lausekkeissa mutta ei sanojen sisällä. Siitä saattaa seurata vaikeuksia tai ei.

12.9. 2020
Palataanpa vielä varmistamaan että pitkän matkan comp ei ole tarpeen. Tilanne olisi siis että on argumentti jonka täytyy etsiä menneisyydestä kenelle se on argumentti, ja tämä jolle se on argumentti ei ole edellinen vapaa pääsana vaan joku kauempi. En kyllä keksi esimerkkiä tuollalailla roikkuvasta argumentista. Poistan sen koodista.

Toinen varmistettava oli voidaanko samaistaa spec ja pitkän matkan argumentti? Kyse olisi siis siitä, että viimeinen sana on pääsana ja se etsii historiasta vapaita argumentteja itselleen. Siinä on aina riskinä se, että se voi löytää itselleen argumentteja paikkoihin jotka kohta tulisivat täyttymään komplementeilla. Tapa miten sitä nyt on hoidettu on että tyypillinen spec kysytään sanakompleksin ensimmäisen osan toimesta ja sanakompleksin jälkimmäisillä osilla ei ole näkyvyyttä menneisyyteen ellei niille ole lisensoitu ld-hakua. Jos niille on lisensoitu ld-haku, ollaan taas samassa liemessä. Läheisen specin ja pitkänmatkan argumentin ero on siinä että läheinen spec on pakko olettaa argumentiksi, pitkän matkan argumentti taas haetaan 'myöhemmin'. Mietin nyt että haetaanko se siinä vaiheessa kun kaikki seuraavat komplementit on käsitelty, vai riittääkö sekään? Taitaa riittää, jos on 'Mitä Pekka luuli Merjan etsivän kaapista' niin siinä 'luuli' ei ole vielä käsitelty loppuun koska sillä on komplementtina lauseke 'Merjan etsivän kaapista' ja se lauseke lopetetaan ensiksi ja argumentti sopii siihen, joten 'mitä' päätyy sinne. Jos taas olisi 'Milloin Pekka luuli Merjan etsivän kaapista' niin siinä 'etsivän' ei voi ottaa 'milloin' argumentiksi ja se päätyy 'luuli' argumentiksi. Pitkän matkan argumentin pitäisi siis tapahtua kun pääsana/lauseke päättyy, mutta miten sen tunnistaa että se päättyy? Relatiivilausekkeet ovat hyviä esimerkkejä lausekkeista jotka päättyvät jossain vaiheessa ja relatiivipronomini täytyy laittaa paikalleen. Niissä päättymisen selvin merkki on päälauseen verbi.

Käsittelyssä pitää tunnistaa seuraava sana tietynlaiseksi ja tehdä operaatiot senhetkiselle viimeiselle sanalle ennenkuin seuraavan sanan kanssa aloitetaan mitään. Tietynlainen ei voi olla negatiivisesti määritelty, 'sana joka ei sovi argumentiksi pääsanalle' koska se voi olla esim. 'luuli Merjan...' jossa oletettavasti argumentti luuli:lle ei ole Merjan vaan se verbi joka tulee seuraavaksi ja 'Merjan' pitää hyväksyä jotta päästään siihen. Pääsanan päättävä sana on suhteessa pääsanaan, lauseessa 'Pekka joka kaatui eilen kaatui tänäänkin' ensimmäinen 'kaatui' ei päätä mitään mutta toinen päättää.

16.9. 2020
Tarkennetaan tuohon mitä tapahtuu '... eilen] kaatui' -kohdassa. 'Kaatui' on siinä uutena sanana. Uusi 'kaatui' löytää sen, että 'Pekka, joka...' on sen spec, mutta sen löytääkseen sen on todettava että mikään muu siinä välissä ei ole sen spec.  Joko ne muut on taiteltu piiloon niin että ne eivät ole 'lähimpiä vapaita', tai sitten kyseessä on pitkän matkan nosto. Piiloon taittelu tarkoittaisi sitä että tämä on komplementtihaara joka on valmis ja johon ei enää jatketa tai voi jatkaa, mutta sen toteaminen vaatii että on tunnistettu että tämä uusin sana ei mene tähän komplementtihaaraan. Siinä kohtaa on sitten ne kaksi vaihtoehtoa, joko a) katsotaan kauemmaksi ja löydetään, että tämä voisi muuttua lähimmäksi elementiksi jos nuo komplementit päätetään päättyneeksi tai b) verbissä on joku suora piirre 'x' joka määrää että komplementti päättyy tähän. B vaatisi aika erikoista uutta mekanismia. Kun kohdataan x, kuinka paljon siinä on komplementteja jotka täytyy sulkea? Yksi tapa olisi sulkea kunnes elementti voi yhdistyä edelliseen. Se olisi oikeastaan aika houkuttelevaa, kunhan nyt varmistuu että piirre 'x' voidaan antaa kaikille sanoille jotka voivat tuollalailla komplementin katkaista. Tulee ongelmia: 'Pekka joka kaatui eilen nolosti kaatui tänäänkin' - siinä on mahdollista lukea 'nolosti' liittyvänä jompaankumpaan kaatumiseen, varsinkin jos tauottaa 'Pekka joka kaatui eilen, nolosti kaatui tänäänkin'. Tämä on hankala:

Pekka joka kaatui eilen nolosti kaatui tänäänkin
Pekka joka kaatui eilen portaissa jotka Raine oli korjannut, nolosti kaatui tänäänkin
Pekka joka kaatui eilen portaissa jotka Raine oli korjannut huonosti pärjäsi kokeessa hyvin
Pekka joka kaatui eilen portaissa jotka Raine oli korjannut kuitenkin pärjäsi kokeessa
Pekka who yesterday fell down awkwardly fell down again awkwardly

Tämä on menossa siihen suuntaan että pitää jo parserointivaiheessa ajatella tätä verkostona jossa aika monta vaihtoehtoa on läsnä ja rakennettavana yhtäaikaa... Vaihdetaan vaihdetta siihen suuntaan.

19.9. 2020
Se epämääräinen houkutus joka on siinä että parserointivaiheessa ajatellaan verkostona on siinä että varsinaisen parseroinnin etenemisen sijaan huomio kiinnittyy yhteen rakenteeseen joka pitää sisällään monta mahdollista parsintaa. Siinä se, että miten rakenne muuttuu kun siihen lisätään seuraava sana on sitten perinteisen parserialgoritmin toimintaa ja tähänmennessä olen aina sitä miettiessä päätynyt takaisin perinteisen parserialgoritmin pulmiin. Takaisinpäätyminen näyttää menevän näin:

Aina kun lisätään uusi sana, tehdään sokeasti sen sallimat merget kaikkiin mahdollisiin edeltäviin sanoihin ja varsinaiset parseroinnin pulmat siirtyvät siihen, miten verkostosta löydetään toimivat reitit. Tässä on huomattava se, että toimivan reitin löytämisen pitäisi olla jatkuvaa, koska on meillä käsitystä jo keskeneräisistä lauseistakin mihin ne ovat menossa. Toisaalta jos toimivien reittien tekeminen tehdään heti sanan lisäämisen jälkeen, olisi syytä jatkaa edellisiä toimivia reittejä ja jos niitä priorisoidaan ollaan taas perinteisissä parserialgoritmin pulmissa.

Toisaalta perinteiset parserialgoritmin pulmat ovat nyt minulla vähän oudossa tilassa, eivät näytä niin perinteisiltä. Koitetaan palauttaa niitä mieleen jos saisi uutta näkökulmaa. Miltä tuo promisecomp näyttää verkostovirityksessä? Siinä todetaan että uusin noodi Y on jo verkostossa olevan X:n komplementti, piirteiden suhteen X:llä on tarvitseva piirre ja Y:llä on tarjoava piirre ja numeraatiossa Y seuraa X:ää. Verkostossa sillä, onko joku komplementti vai spec ei ole niinkään väliä, mutta sillä on väliä että kun on uusi noodi Y, mitkä ovat noodit joita tarkastellaan mahdollisessa suhteessa siihen. Ne olisivat edellisten mahdollisten reittien päät ja edeltävä sana tai sanan osa. Tuo comp:n ja promisecompin ero tulee siinä että jos ajatellaan että komplementtisuhde luo rakenteen jossa [A b], eli A on pääsana, mutta sanajärjestyksessä b on viimeinen, niin vain reittien päitä katsoessa b ei ole käsillä. PromiseComp tarkoittaa oikeastaan vain sitä, että saa käyttää molempia A ja b jos b on viimeinen sana. Tarkoittaako? On pieni aavistus että tuo ei ihan riittäisi, että pitäisi voida tunkea uusia komplementteja myös muihin kuin rakenteen pääsanaan tai uusimpaan sanaan. Jos haluttaisiin lisätä [A [B [C d]]] & e -> [A [B [[C d] e]]] niin se ei onnistuisi tuolla säännöllä, onnistuisi vain [A [[B [C d]] e]] (A:lle uusi komplementti koska A on reitin pääsana) tai [A [B [C [D e]]]] (d:lle uusi komplementti, koska d on edeltävä sana). Näyttää siltä että tarkasteltavat mergepaikat olisivat reitin pääsanat. Se havainto on hyvin lähellä Paulin parseria. Siinä on sitten se, että jos joku näistä varhaisemmista mergepaikoista käytetään, se sulkee uudemmat mergepaikat pois käytöstä.

Näyttää että parserirakenteeni on ollut järkevä myös tästä suunnasta katsottuna. Tuossa on yhä kyse operaatioista jotka voidaan tehdä suhteessa tiettyyn operaatioiden ketjuun: uusi operaatio voi tarkoittaa että tietynlaiset operaatiot eivät enää ole siinä ketjussa mahdollisia ja parserin pitäisi seurata kaikkia mahdollisia ketjuja. Mahdollisia siinä mielessä että seurataan vain niitä ketjuja jotka ovat ristiriidattomia, ei 'kaikkia mahdollisia'. Reitillä on johdannaisominaisuutena se, että reitti tarjoaa vain tietyt elementit joihin seuraava sana voi liittyä. Sitten on kysymys siitä, että milloin reitit haarautuvat, jos reitti tarjoaa tietyt elementit joihin seuraava sana voi liittyä, mutta siinä on preferenssi että lähin ensin, niin kuinka sitova se vaatimus on? Nuo aiemmat tämän pohdinnan käynnistäneet esimerkit olivat niistä joissa todettiin että ei oteta lähintä, pitää jättää mahdollisuus tehdä toisinkin.

Mietitään onko se reittien arkkitehtuuri ihan oikea nyt. Reitti muodostuu operaatioista...

27.12. 2020
Koitetaan taas pseudoneuraalista toteutusta näille operaatioille. Piirteet, operaatiot, numeraatiot ja konstituentit ovat verkon noodeja. Haluttaisiin verkko, joka voisi esittää mahdolliset parseroinnit yhdelle lauseelle. Operaatio syttyy jos molemmat sen viittaamat numeraatiot syttyvät ja ne syttyvät jos konstituenttien piirreyhteys voi syttyä, tarvitaan suljettu piiri. Pulma on miten esittää mahdolliset eri suljetut piirit samassa verkossa niin että sieltä pystyy erottelemaan toimivat yhdistelmät.

30.12. 2020
Hm, hm, hm. Mietin tuota parsintaa niin, että jos ei ole lainkaan sitä, että komplementin liittämistä rakenteeseen täytyy lykätä kunnes komplementti on valmis, niin onko silloin enää tarvetta aidolle pitkän kantaman siirrolle, onko niissä tapauksissa aina se pitkän kantaman edellinen elementti sittenkin edellinen vapaa elementti. Pitää vähän kokeilla.

31.12. 2020
Aika pian selvisi, että pitää jakaa vapaiden edeltäjien käsite kahdeksi: kun ollaan syvällä lauseessa ja tulee uusi sana joka saattaa olla komplementtiargumentti jollekin, niin hakuavaruus siinä on sitä kohtaa hallitsevat päät, rakennepuussa siis oikeanpuoleinen ranka. Sama mikä Paulin parserissa on hakuavaruutena. Minun vapaat edeltäjät sisältää oikean rangan. Toinen mahdollisuus uudelle sanalle on, että se saattaa olla pää jollekin kauemmalle edeltävälle argumentille. Jos argumentti on heti edeltävä, se argumentti tulkitaan määreeksi, mutta jos se on jossain kauempana edellä se voi edustaa komplementin paikalle menevää argumenttia. Noiden kauempaa haettavien täytyy olla todellisia vapaita päitä, päitä jotka eivät ole argumentteja kenellekään.

Tuossa on nyt se pulma, että mikä on tavallisen specin hakuavaruus, se että se on välitön edeltäjä ei taida riittää. Meillä voi olla vaikkapa 'Pekka, joka oli myöhässä, saapui kahvilaan' Tässä 'saapui' ottaa speciksi koko '[Pekka, joka oli myöhässä]', ei '[myöhässä]'. Se sopisi siihen, että otetaan edeltävä vapaa pää, mutta tuleeko tilanteita joissa rakenne joka ei ole enää vapaa tarvittaisiin speciksi? Tälläinen voisi syntyä jos olisi vaikka rakennettu komplementtiargumenttia. 'Pekka etsi koiraa potkivaa miestä' Siinäkin oikeastaan tuo on parseroinnin epävarmuuskohta otetaanko 'koiraa' etsi:n komplementiksi vai annetaanko sen olla vapaa. Sen epävarmuuskohdan täytyy kuitenkin näemmä olla ja se tulee aiheuttamaan paljon haarautumia. Voiko niitä haarautumia sulkea myös nopeasti? Ei näy ainakaan heti keinoa. Voisi kuitenkin olla maksimimäärä vapaiksi jääneitä päitä, mutta sitä kannattaa katsoa myöhemmin kun parseriin on toteutettu sellainen hypoteesi että komplementtia etsitään oikean reunan päistä, mutta specciä etsitään ensimmäisestä vapaasta päästä.


6.6. 2021
Mietin voiko parserin käsittelemien vaihtoehtojen joukon rajoittaa seuraaviin: N0 - uusin elementti, N1 - edellinen elementti, X - päärakenne ja LR - vasen laita. Vaihtoehdot olisi: Comp:{^N1, N0}, Spec:{N1, ^N0}, Adj:{^N1, ^N0}, XComp:{^X, N0}, LRComp{^X, LR}